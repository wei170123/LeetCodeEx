/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package _RoamToInteger;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class RoamConvertUtil {
	
	private static Map<String, Integer> roamMap;
	
	static {
        Map<String, Integer> intMap = new HashMap<String, Integer>();
        intMap.put("I", 1);
        intMap.put("V", 5);
        intMap.put("X", 10);
        intMap.put("L", 50);
        intMap.put("C", 100);
        intMap.put("D", 500);
        intMap.put("M", 1000);
        roamMap = Collections.unmodifiableMap(intMap);
    }
	
    /**
     * 根據羅馬數字規則，一次取兩位處理
     * 
     * @param roamStr 羅馬數字
     * @return 阿拉伯數字
     * @throws Exception 非標準羅馬數字
     */
    public static int convert(String roamStr) throws Exception {
    	int result = 0;
    	
    	char[] roamChar = roamStr.toUpperCase().toCharArray();
    	int size = roamChar.length;
    	try {
    		for(int i = 0; i < size; i = i + 2) {
        		char c1 = roamChar[i];
        		char c2 = i + 1 < size ? roamChar[i+1]: Character.MIN_VALUE;
        		
        		Integer i1 = roamMap.get(String.valueOf(c1));
        		Integer i2 = 0;
        		if (c2 != Character.MIN_VALUE) {
        			i2 = roamMap.get(String.valueOf(c2));
        		}
        		
        		Integer tmp = 0;
        		if(i1 < i2) {
        			tmp = i2 - i1;
        		}
        		else {
        			tmp = i2 + i1;
        		}
        		
        		result = result + tmp;
        	}
    	} catch (Exception e) {
    		System.out.println(e.getMessage());
    		throw new Exception("Not a valid Roam");
    	}    	
    	
        return result;
    }
}
